{"version":3,"sources":["App.js","index.js"],"names":["App","WebSocket","localConnection","remoteConnection","videoRef","useRef","useState","remoteVideos","setRemoteVideos","useEffect","navigator","mediaDevices","getUserMedia","video","frameRate","ideal","max","width","height","facingMode","then","stream","current","srcObject","configuration","offerToReceiveAudio","offerToReceiveVideo","RTCPeerConnection","iceServers","getTracks","forEach","track","addTrack","ontrack","e","streams","i","length","onicecandidate","candidate","addIceCandidate","catch","console","error","createOffer","offer","setLocalDescription","setRemoteDescription","localDescription","createAnswer","answer","startPeerConnection","className","ref","autoPlay","playsInline","map","v","el","ReactDOM","render","document","getElementById"],"mappings":"0LAyGeA,MAtGf,WAEiB,IAAIC,UAAU,uCAA3B,IAOIC,EACAC,EANEC,EAAWC,iBAAO,MAJb,GAKYA,iBAAO,IAEUC,mBAAS,KAPtC,mBAOJC,EAPI,KAOUC,EAPV,KA4EX,OAhEAC,qBAAU,WAYNC,UAAUC,aAAaC,aAXH,CAChBC,MAAO,CACHC,UAAW,CACPC,MAAO,GACPC,IAAK,IAETC,MAAO,KACPC,OAAQ,IACRC,WAAY,UAIVC,MAAK,SAAAC,GACFjB,EAASkB,QAAQC,UAAYF,EAO9C,SAA6BA,GACzB,IAAMG,EAAgB,CAClBC,qBAAqB,EACrBC,qBAAqB,GAEzBxB,EAAkB,IAAIyB,kBAAkB,CAACH,cAAeA,EAAeI,WAAY,KACnFzB,EAAmB,IAAIwB,kBAAkBH,GACzCH,EAAOQ,YAAYC,SACf,SAAUC,GACN7B,EAAgB8B,SACZD,EACAV,MAKZlB,EAAiB8B,QAAU,SAAUC,GACjC1B,EAAgB0B,EAAEC,SAClB,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAEC,QAAQE,OAAQD,IAClChC,EAASkB,QAAQc,GAAGb,UAAYW,EAAEC,QAAQC,IAMlDlC,EAAgBoC,eAAiB,SAAAJ,GAAC,OAAKA,EAAEK,WACApC,EAAiBqC,gBAAgBN,EAAEK,WAClBE,MAAMC,QAAQC,QAExExC,EAAiBmC,eAAiB,SAAAJ,GAAC,OAAKA,EAAEK,WACArC,EAAgBsC,gBAAgBN,EAAEK,WAClBE,MAAMC,QAAQC,QAExEzC,EAAgB0C,cACAxB,MAAK,SAAAyB,GAAK,OAAI3C,EAAgB4C,oBAAoBD,MAClDzB,MAAK,kBAAMjB,EAAiB4C,qBAAqB7C,EAAgB8C,qBACjE5B,MAAK,kBAAMjB,EAAiB8C,kBAC5B7B,MAAK,SAAA8B,GAAM,OAAI/C,EAAiB2C,oBAAoBI,MACpD9B,MAAK,kBAAMlB,EAAgB6C,qBAAqB5C,EAAiB6C,qBACjEP,MAAMC,QAAQC,OA7CjBQ,CAAoB9B,MAEvBoB,MAAMC,QAAQC,SAEzB,IA8CC,sBAAKS,UAAU,MAAf,UACI,sCACA,uBACIC,IAAKjD,EACLa,MAAO,IACPC,OAAQ,IACRoC,UAAQ,EACRC,aAAW,IAEf,uCACChD,EAAaiD,KAAI,SAACC,EAAGrB,GASlB,OARqB,uBAEjBiB,IAAK,SAAAK,GAAE,OAAItD,EAASkB,QAAQc,GAAKsB,GACjCzC,MAAO,IACPC,OAAQ,IACRoC,UAAQ,EACRC,aAAW,GALNnB,UCxFzBuB,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,W","file":"static/js/main.6f16279f.chunk.js","sourcesContent":["import React, {useEffect, useRef, useState} from 'react';\nimport './App.css';\n\nfunction App() {\n\n    const conn = new WebSocket('wss://chatapp.progmasters.hu/socket');\n\n    const videoRef = useRef(null);\n    const videoRemoteRef = useRef([]);\n\n    const [remoteVideos, setRemoteVideos] = useState([]);\n\n    let localConnection;\n    let remoteConnection;\n\n    useEffect(() => {\n        const constraints = {\n            video: {\n                frameRate: {\n                    ideal: 10,\n                    max: 15,\n                },\n                width: 1280,\n                height: 720,\n                facingMode: 'user',\n            },\n        };\n        navigator.mediaDevices.getUserMedia(constraints)\n                 .then(stream => {\n                     videoRef.current.srcObject = stream;\n                     startPeerConnection(stream);\n                 })\n                 .catch(console.error);\n\n    }, []);\n\n    function startPeerConnection(stream) {\n        const configuration = {\n            offerToReceiveAudio: true,\n            offerToReceiveVideo: true,\n        };\n        localConnection = new RTCPeerConnection({configuration: configuration, iceServers: []});\n        remoteConnection = new RTCPeerConnection(configuration);\n        stream.getTracks().forEach(\n            function (track) {\n                localConnection.addTrack(\n                    track,\n                    stream,\n                );\n            },\n        );\n\n        remoteConnection.ontrack = function (e) {\n            setRemoteVideos(e.streams);\n            for (let i = 0; i < e.streams.length; i++) {\n                videoRef.current[i].srcObject = e.streams[i];\n            }\n        };\n\n        // Set up the ICE candidates for the two peers\n\n        localConnection.onicecandidate = e => !e.candidate\n                                              || remoteConnection.addIceCandidate(e.candidate)\n                                                                 .catch(console.error);\n\n        remoteConnection.onicecandidate = e => !e.candidate\n                                               || localConnection.addIceCandidate(e.candidate)\n                                                                 .catch(console.error);\n\n        localConnection.createOffer()\n                       .then(offer => localConnection.setLocalDescription(offer))\n                       .then(() => remoteConnection.setRemoteDescription(localConnection.localDescription))\n                       .then(() => remoteConnection.createAnswer())\n                       .then(answer => remoteConnection.setLocalDescription(answer))\n                       .then(() => localConnection.setRemoteDescription(remoteConnection.localDescription))\n                       .catch(console.error);\n\n    }\n\n    return (\n        <div className=\"App\">\n            <p>LOCAL</p>\n            <video\n                ref={videoRef}\n                width={400}\n                height={300}\n                autoPlay\n                playsInline\n            />\n            <p>REMOTE</p>\n            {remoteVideos.map((v, i) => {\n                const videoElement = <video\n                    key={i}\n                    ref={el => videoRef.current[i] = el}\n                    width={400}\n                    height={300}\n                    autoPlay\n                    playsInline\n                />;\n                return videoElement;\n            })}\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n"],"sourceRoot":""}